{"name":"Arm-trusted-firmwaresmc","tagline":"ARM Trusted Firmware","body":"ARM Trusted Firmware - version 1.1\r\n==================================\r\n\r\nARM Trusted Firmware provides a reference implementation of secure world\r\nsoftware for [ARMv8-A], including Exception Level 3 (EL3) software. This release\r\nprovides complete support for version 0.2 of the [PSCI] specification, initial\r\nsupport for the new version 1.0 of that specification, and prototype support for\r\nthe Trusted Board Boot Requirements specification.\r\n\r\nThe intent is to provide a reference implementation of various ARM interface\r\nstandards, such as the Power State Coordination Interface ([PSCI]), Trusted\r\nBoard Boot Requirements (TBBR) and [Secure Monitor] [TEE-SMC] code. As far as\r\npossible the code is designed for reuse or porting to other ARMv8-A model and\r\nhardware platforms.\r\n\r\nARM will continue development in collaboration with interested parties to\r\nprovide a full reference implementation of PSCI, TBBR and Secure Monitor code\r\nto the benefit of all developers working with ARMv8-A TrustZone technology.\r\n\r\n\r\nLicense\r\n-------\r\n\r\nThe software is provided under a BSD 3-Clause [license]. Certain source files\r\nare derived from FreeBSD code: the original license is included in these\r\nsource files.\r\n\r\n\r\nThis Release\r\n------------\r\n\r\nThis release is a limited functionality implementation of the Trusted Firmware.\r\nIt provides a suitable starting point for productization. Future versions will\r\ncontain new features, optimizations and quality improvements.\r\n\r\n### Functionality\r\n\r\n*   Prototype implementation of a subset of the Trusted Board Boot Requirements\r\n    Platform Design Document (PDD). This includes packaging the various firmware\r\n    images into a Firmware Image Package (FIP) to be loaded from non-volatile\r\n    storage, and a prototype of authenticated boot using key certificates stored\r\n    in the FIP.\r\n\r\n*   Initializes the secure world (for example, exception vectors, control\r\n    registers, GIC and interrupts for the platform), before transitioning into\r\n    the normal world.\r\n\r\n*   Supports both GICv2 and GICv3 initialization for use by normal world\r\n    software.\r\n\r\n*   Starts the normal world at the Exception Level and Register Width specified\r\n    by the platform port. Typically this is AArch64 EL2 if available.\r\n\r\n*   Handles SMCs (Secure Monitor Calls) conforming to the [SMC Calling\r\n    Convention PDD] [SMCCC] using an EL3 runtime services framework.\r\n\r\n*   Handles SMCs relating to the [Power State Coordination Interface PDD] [PSCI]\r\n    for the Secondary CPU Boot, CPU Hotplug, CPU Idle and System Shutdown/Reset\r\n    use-cases.\r\n\r\n*   A Test Secure-EL1 Payload and Dispatcher to demonstrate Secure Monitor\r\n    functionality such as world switching, EL1 context management and interrupt\r\n    routing. This also demonstrates Secure-EL1 interaction with PSCI. Some of\r\n    this functionality is provided in library form for re-use by other\r\n    Secure-EL1 Payload Dispatchers.\r\n\r\n*   Support for alternative Trusted Boot Firmware. Some platforms have their own\r\n    Trusted Boot implementation and only require the Secure Monitor\r\n    functionality provided by ARM Trusted Firmware.\r\n\r\n*   Isolation of memory accessible by the secure world from the normal world\r\n    through programming of a TrustZone controller.\r\n\r\n*   Support for CPU specific reset sequences, power down sequences and register\r\n    dumping during crash reporting. The CPU specific reset sequences include\r\n    support for errata workarounds.\r\n\r\nFor a full description of functionality and implementation details, please\r\nsee the [Firmware Design] and supporting documentation. The [Change Log]\r\nprovides details of changes made since the last release.\r\n\r\n### Platforms\r\n\r\nThis release of the Trusted Firmware has been tested on Revision B of the\r\n[Juno ARM Development Platform] [Juno] with Version r0p0-00rel7 of the\r\n[ARM SCP Firmware] [SCP download].\r\n\r\nThe Trusted Firmware has also been tested on the 64-bit Linux versions of the\r\nfollowing ARM [FVP]s:\r\n\r\n*   `Foundation_Platform` (Version 9.1, Build 9.1.33)\r\n*   `FVP_Base_AEMv8A-AEMv8A` (Version 6.2, Build 0.8.6202)\r\n*   `FVP_Base_Cortex-A57x4-A53x4` (Version 6.2, Build 0.8.6202)\r\n*   `FVP_Base_Cortex-A57x1-A53x1` (Version 6.2, Build 0.8.6202)\r\n*   `FVP_Base_Cortex-A57x2-A53x4` (Version 6.2, Build 0.8.6202)\r\n\r\nThe Foundation FVP can be downloaded free of charge. The Base FVPs can be\r\nlicensed from ARM: see [www.arm.com/fvp] [FVP].\r\n\r\n### Still to Come\r\n\r\n*   Complete and more flexible Trusted Board Boot implementation.\r\n\r\n*   Complete implementation of the [PSCI] v1.0 specification.\r\n\r\n*   Support for alternative types of Secure-EL1 Payloads.\r\n\r\n*   Extending the GICv3 support to the secure world.\r\n\r\n*   Support for new System IP devices.\r\n\r\nFor a full list of detailed issues in the current code, please see the [Change\r\nLog] and the [GitHub issue tracker].\r\n\r\n\r\nGetting Started\r\n---------------\r\n\r\nGet the Trusted Firmware source code from\r\n[GitHub](https://www.github.com/ARM-software/arm-trusted-firmware).\r\n\r\nSee the [User Guide] for instructions on how to install, build and use\r\nthe Trusted Firmware with the ARM [FVP]s.\r\n\r\nSee the [Firmware Design] for information on how the ARM Trusted Firmware works.\r\n\r\nSee the [Porting Guide] as well for information about how to use this\r\nsoftware on another ARMv8-A platform.\r\n\r\nSee the [Contributing Guidelines] for information on how to contribute to this\r\nproject and the [Acknowledgments] file for a list of contributors to the\r\nproject.\r\n\r\n### Feedback and support\r\n\r\nARM welcomes any feedback on the Trusted Firmware. Please send feedback using\r\nthe [GitHub issue tracker].\r\n\r\nARM licensees may contact ARM directly via their partner managers.\r\n\r\n\r\n- - - - - - - - - - - - - - - - - - - - - - - - - -\r\n\r\n_Copyright (c) 2013-2015, ARM Limited and Contributors. All rights reserved._\r\n\r\n\r\n[License]:                  ./license.md \"BSD license for ARM Trusted Firmware\"\r\n[Contributing Guidelines]:  ./contributing.md \"Guidelines for contributors\"\r\n[Acknowledgments]:          ./acknowledgements.md \"Contributor acknowledgments\"\r\n[Change Log]:               ./docs/change-log.md\r\n[User Guide]:               ./docs/user-guide.md\r\n[Firmware Design]:          ./docs/firmware-design.md\r\n[Porting Guide]:            ./docs/porting-guide.md\r\n\r\n[ARMv8-A]:               http://www.arm.com/products/processors/armv8-architecture.php \"ARMv8-A Architecture\"\r\n[FVP]:                   http://www.arm.com/fvp \"ARM's Fixed Virtual Platforms\"\r\n[Juno]:                  http://www.arm.com/products/tools/development-boards/versatile-express/juno-arm-development-platform.php \"Juno ARM Development Platform\"\r\n[SCP download]:          https://silver.arm.com/download/download.tm?pv=1764630\r\n[PSCI]:                  http://infocenter.arm.com/help/topic/com.arm.doc.den0022c/DEN0022C_Power_State_Coordination_Interface.pdf \"Power State Coordination Interface PDD (ARM DEN 0022C)\"\r\n[SMCCC]:                 http://infocenter.arm.com/help/topic/com.arm.doc.den0028a/index.html \"SMC Calling Convention PDD (ARM DEN 0028A)\"\r\n[TEE-SMC]:               http://www.arm.com/products/processors/technologies/trustzone/tee-smc.php \"Secure Monitor and TEEs\"\r\n[GitHub issue tracker]:  https://github.com/ARM-software/tf-issues/issues\r\n","google":"ua-61006774-1","note":"Don't delete this file! It's used internally to help with page regeneration."}